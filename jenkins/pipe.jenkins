pipeline {
    agent {
	label 'main'
	}
    environment {
        PROJECT_NAME = "MEZANINE FORK IN-DOCKER TEST CI/CD"
        OWNER_NAME = "Gena Mrt"
	}
//---stage0. git clone to workspace - should pass before 1st by default---//
    stages {
        stage("===1. PREPARE REMOTE MACHINE===") {
            steps {
                script {
		 echo "STAGE 1 COMPELETED AND MARKED AS /* code */ COMMENT---"
/*		 echo "---Copy config---"
		 sh "scp ./nginxconf/mezanine.conf root@192.168.1.63:/etc/nginx/conf.d/"
                 echo "---Connecting---"
                 sh """ssh 192.168.1.63 -l root << EOF
                   whoami
                    echo "============== Install nginx and docker =================="
                    apt update -y
                    apt install nginx apt-transport-https ca-certificates curl gnupg lsb-release -y
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
                    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu buster stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
                    apt update -y 
                    apt install -y docker-ce docker-ce-cli containerd.io
                    exit
                    EOF""" */
                    }
                }
            }
	 stage("===2. CODE AUTOTEST===") {
	 	steps {
			script {
			echo "---Prepare Test Dir on Remote Machine---"
			sh "scp -r /var/lib/jenkins/workspace/Mezanine/ root@192.168.1.63:/root/mezatest/"
			echo "---Prepare Pytest on Remote Machine---"
			sh """ssh 192.168.1.63 -l root << EOF
			apt install -y python3-pip python3-pytest
			echo "---Running pytest---"
			echo "---pytest-3 /root/mezatest/Mezanine/tests/conftest.py--- UNTIL ITS NOT WORKING, RUNNING JUST DIR LISTING"
			ls -la /root/mezatest/Mezanine/tests
			exit
			EOF"""
			}
		}
	    }
        }
    }
